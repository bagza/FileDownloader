buildscript {
    ext.kotlin_version = '1.0.5'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME as String
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // This seems to be firing due to okio referencing java.nio.File
        // which is harmless for us.
        warning 'InvalidPackage',
                // don't need parcel creator for the sub-class of MessageSnapshot.
                'ParcelCreator'
        // avoid warning for "Not all execution paths return a value"
        return true
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test"))
        {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.android.support:support-v4:25.0.1'

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    //testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    //testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    //testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}